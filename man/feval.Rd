% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert.R, R/feval.R
\name{as.feval}
\alias{as.feval}
\alias{as.feval_irreg}
\alias{as.data.frame.feval}
\alias{as.matrix.feval}
\alias{feval}
\alias{feval.matrix}
\alias{feval.numeric}
\alias{feval.data.frame}
\alias{feval.list}
\alias{feval.fvector}
\title{Constructors for functional data evaluated on grids of argument values}
\usage{
as.feval(data, ...)

as.feval_irreg(data, signif = NULL, ...)

\method{as.data.frame}{feval}(x, row.names = NULL, optional = FALSE,
  argvals = NULL, interpolate = FALSE, ...)

\method{as.matrix}{feval}(x, argvals = NULL, interpolate = FALSE, ...)

feval(data, ...)

\method{feval}{matrix}(data, argvals = NULL, domain = NULL,
  evaluator = approx_linear, signif = 4, ...)

\method{feval}{numeric}(data, argvals = NULL, domain = NULL,
  evaluator = approx_linear, signif = 4, ...)

\method{feval}{data.frame}(data, id = 1, argvals = 2, value = 3,
  domain = NULL, evaluator = approx_linear, signif = 4, ...)

\method{feval}{list}(data, argvals = NULL, domain = NULL,
  evaluator = approx_linear, signif = 4, ...)

\method{feval}{fvector}(data, argvals = NULL, domain = NULL,
  evaluator = approx_linear, signif = 4, ...)
}
\arguments{
\item{data}{a \code{matrix}, \code{data.frame} or \code{list} of suitable shape, or another \code{fvector}-object.}

\item{...}{arguments for \code{\link[=feval]{feval()}}}

\item{signif}{significant digits of the "resolution" of the evaluation grid.  See details.}

\item{x}{an \code{feval} object}

\item{optional}{not used}

\item{argvals}{\code{numeric}, or list of \code{numeric}s. The evaluation grid. See Details.
For the \code{data.frame}-methods: the name/number of the column defining the evaluation grid.}

\item{interpolate}{should functions be evaluated (i.e., inter-/extrapolated)
for \code{argvals} for which no original data is available? Only relevant for
\code{feval}, defaults to TRUE.}

\item{domain}{range of the \code{argvals}.}

\item{evaluator}{a function accepting arguments \code{x, argvals, evaluations}. See details.}

\item{id}{The name/number of the column defining which data belong to which function.}

\item{value}{The name/number of the column containing the function evaluations.}

\item{rownames}{not used}

\item{...}{not used, except for \code{feval.fvector} -- specify \code{argvals} and \code{Ã¬nterpolate = TRUE} to
turn an irregular \code{feval} into a regular one, see examples...}
}
\value{
an \code{feval}-object (or a \code{data.frame}/\code{matrix} for the conversion functions, obviously.)
}
\description{
Various constructor and conversion methods.

\code{feval.list} accepts a list of vectors of identical lengths
containing evaluations or a list of 2-column matrices/data.frames with
\code{argvals} in the first and evaluations in the second column
}
\details{
\strong{\code{evaluator}}: must be a \code{function(x, argvals, evaluations)} that returns
the function's (approximated/interpolated) values at locations \code{x} based on
the \code{evaluations} available at locations \code{argvals}.
Available \code{evaluator}-functions:
\itemize{
\item \code{approx_linear} for linear interpolation without extrapolation (i.e.,
\code{\link[zoo:na.approx]{zoo::na.approx()}} with \code{na.rm = FALSE})  -- this is the default,
\item \code{approx_spline} for cubic spline interpolation, (i.e., \code{\link[zoo:na.spline]{zoo::na.spline()}}
with \code{na.rm = FALSE}),
\item \code{approx_fill_extend} for linear interpolation and constant extrapolation
(i.e., \code{\link[zoo:na.fill]{zoo::na.fill()}} with \code{fill = "extend"})
\item \code{approx_locf} for "last observation carried forward"  (i.e.,
\code{\link[zoo:na.locf]{zoo::na.locf()}} with \code{na.rm = FALSE} and
\item \code{approx_nocb} for "next observation carried backward" (i.e.,
\code{\link[zoo:na.locf]{zoo::na.locf()}} with \code{na.rm = FALSE, fromLast = TRUE}).
}

See \code{tidyfun:::zoo_wrapper} and \code{tidyfun:::approx_linear}, which is simply
\code{zoo_wrapper(zoo::na.approx, na.rm = FALSE)}, for examples of implementations of
this.

\strong{\code{signif}}: \code{argvals} that are equivalent to this significant digit are
treated as identical. E.g., if an evaluation of f(t) is available at t=1 and a function
value is requested at t = 1.001, f(1) will be returned if \code{signif} < 4.
}
\examples{
#turn irregular to regular feval
#TODO: add extra function/verb for this
(f <- c(rgp(1, argvals = seq(0,1,l=11)), rgp(1, argvals = seq(0,1,l=21))))
feval(f, interpolate = TRUE, argvals = seq(0,1,l=21))
}
