% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unnest.R
\name{unnest.data.frame}
\alias{unnest.data.frame}
\title{Unnest a \code{data.frame} with \code{fvector}-columns}
\usage{
unnest.data.frame(data, ..., .argvals = NULL, .drop = NA, .id = NULL,
  .sep = NULL, .preserve = NULL)
}
\arguments{
\item{data}{A data frame.}

\item{...}{Specification of columns to nest. Use bare variable names or
functions of variables. If omitted, defaults to all list-cols.}

\item{.argvals}{evaluation grid for fvector columns. Can be a named list
giving one j-vector for each \code{fvector} to unlist. Used as the \code{argvals}
argument for the \href{tidyfun::as.data.frame.feval}{as.data.frame}-method for
the respective \code{fvector}-columns.}

\item{.drop}{Should additional list columns be dropped? By default,
\code{unnest} will drop them if unnesting the specified columns requires
the rows to be duplicated.}

\item{.id}{Data frame identifier - if supplied, will create a new column
with name \code{.id}, giving a unique identifier. This is most useful if
the list column is named.}

\item{.sep}{If non-\code{NULL}, the names of unnested data frame columns
will combine the name of the original list-col with the names from
nested data frame, separated by \code{.sep}.}

\item{.preserve}{Optionally, list-columns to preserve in the output. These
will be duplicated in the same way as atomic vectors. This has
\link[dplyr:select]{dplyr::select} semantics so you can preserve multiple variables with
\code{.preserve = c(x, y)} or \code{.preserve = starts_with("list")}.}
}
\description{
This is a wrapper around \code{\link[tidyr:unnest]{tidyr::unnest()}} that extends the functionality
provided for list-columns to \code{fvector}-columns, i.e., it creates a new "long"
\code{data.frame} containing the function evaluations. Use \code{sep = "_"} to create
column names that retain the names of the \code{fvector}-columns
}
